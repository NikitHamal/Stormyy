/* Prevent rubber-band scrolling on iOS */
html {
  position: fixed;
  height: 100%;
  overflow: hidden;
  width: 100%;
  -webkit-overflow-scrolling: touch;
}

body {
  overflow: auto;
  height: 100%;
  position: fixed;
  width: 100%;
  -webkit-overflow-scrolling: touch;
  -webkit-tap-highlight-color: transparent; /* Remove tap highlight on iOS */
}

/* Fix for iOS audio controls */
audio {
  width: 100%;
  max-width: 300px;
  /* Fix iOS audio control styling */
  -webkit-appearance: none;
  appearance: none;
}

/* Fix for iOS button styling */
button {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-tap-highlight-color: transparent;
  cursor: pointer;
  /* Ensure buttons are more tappable on iOS */
  min-width: 44px;
  min-height: 44px;
}

/* Fix for iOS input styling */
input {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  border-radius: 0;
}

/* Fix backdrop-filter for iOS */
.chat-container,
.music-controls,
.interaction-toolbar,
.nav-icon,
.settings-menu {
  -webkit-backdrop-filter: blur(10px);
  backdrop-filter: blur(10px);
}

/* Fix for iOS scrolling in chat container */
.chat-container {
  -webkit-overflow-scrolling: touch;
}

/* Fix for iOS volume slider */
.volume-slider {
  -webkit-appearance: none;
  appearance: none; 
  background: rgba(255, 255, 255, 0.1);
  height: 4px;
  border-radius: 2px;
}

.volume-slider::-webkit-slider-thumb {
  -webkit-appearance: none;
  width: 12px;
  height: 12px;
  background: rgb(147, 51, 234);
  border-radius: 50%;
  cursor: pointer;
}

/* Fix for iOS touch events */
.magical-orb,
.toolbar-icon,
.nav-icon,
.control-button {
  cursor: pointer;
  touch-action: manipulation;
}

/* Fix for iOS safe areas */
@supports (padding: max(0px)) {
  .bottom-controls {
    padding-bottom: max(20px, env(safe-area-inset-bottom));
  }
  
  .top-nav {
    padding-top: max(20px, env(safe-area-inset-top));
  }
}

.app-container {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  position: relative;
}

.top-nav {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  display: flex;
  justify-content: space-between;
  padding: 20px;
  z-index: 1000;
}

.nav-group {
  display: flex;
  gap: 15px;
}

.nav-icon {
  width: 40px;
  height: 40px;
  background: rgba(147, 51, 234, 0.1);
  backdrop-filter: blur(10px);
  border-radius: 50%;
  border: none;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  transition: all 0.3s;
  box-shadow: 0 0 15px rgba(147, 51, 234, 0.2);
}

.nav-icon:hover {
  background: rgba(147, 51, 234, 0.2);
  transform: scale(1.1);
  box-shadow: 0 0 20px rgba(147, 51, 234, 0.4);
}

.nav-icon svg {
  width: 20px;
  height: 20px;
  fill: white;
}

.interaction-toolbar {
  position: fixed;
  left: 50%;
  transform: translateX(-50%);
  bottom: 60px;
  display: flex;
  gap: 15px;
  padding: 15px;
  background: rgba(147, 51, 234, 0.1);
  backdrop-filter: blur(10px);
  border-radius: 25px;
  z-index: 1000;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  border: 1px solid rgba(167, 71, 254, 0.2);
  box-shadow: 
    0 0 20px rgba(147, 51, 234, 0.2),
    inset 0 0 10px rgba(147, 51, 234, 0.1);
}

.toolbar-icon {
  width: 45px;
  height: 45px;
  border-radius: 50%;
  border: none;
  background: rgba(255, 255, 255, 0.1);
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  transition: all 0.3s;
  box-shadow: 0 0 15px rgba(147, 51, 234, 0.2);
}

.toolbar-icon:hover {
  background: rgba(255, 255, 255, 0.2);
  transform: scale(1.1);
  box-shadow: 0 0 20px rgba(147, 51, 234, 0.4);
}

.toolbar-icon svg {
  width: 24px;
  height: 24px;
  fill: white;
}

.main-content {
  flex: 1;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  padding-top: 80px;
}

/* Update chat container styles */
.chat-container {
  position: fixed;
  left: 50%;
  bottom: 60px;
  transform: translateX(-50%) translateY(20px);
  width: 500px;
  max-width: 90%;
  z-index: 1001; /* Higher than interaction toolbar */
  background: rgba(147, 51, 234, 0.15);
  backdrop-filter: blur(20px);
  border-radius: 25px;
  padding: 20px;
  transition: all 0.3s;
  opacity: 0;
  pointer-events: auto;
  display: none;
  border: 1px solid rgba(167, 71, 254, 0.3);
  box-shadow: 
    0 0 30px rgba(147, 51, 234, 0.3),
    inset 0 0 15px rgba(147, 51, 234, 0.2);
}

.chat-container.visible {
  opacity: 1;
  transform: translateX(-50%) translateY(0);
  display: block;
}

/* Update input group layout */
.input-group {
  display: flex;
  gap: 15px;
  align-items: center;
  position: relative;
}

/* Enhance chat input styling */
.chat-input {
  flex: 1;
  padding: 16px 20px;
  border: none;
  border-radius: 15px;
  background: rgba(147, 51, 234, 0.1);
  color: white;
  font-size: 16px;
  transition: all 0.3s;
  line-height: 1.5;
  backdrop-filter: blur(5px);
  border: 1px solid rgba(167, 71, 254, 0.2);
}

.chat-input:focus {
  background: rgba(147, 51, 234, 0.15);
  outline: none;
  box-shadow: 0 0 15px rgba(147, 51, 234, 0.2);
}

.chat-input::placeholder {
  color: rgba(255, 255, 255, 0.6);
  font-style: italic;
}

/* Improve send button UX */
.send-button {
  padding: 16px 30px;
  border: none;
  border-radius: 15px;
  background: linear-gradient(135deg, rgb(147, 51, 234), rgb(167, 71, 254));
  color: white;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s;
  display: flex;
  align-items: center;
  gap: 8px;
  box-shadow: 0 4px 20px rgba(147, 51, 234, 0.3);
}

.send-button:hover {
  background: linear-gradient(135deg, rgb(167, 71, 254), rgb(147, 51, 234));
  transform: translateY(-2px);
  box-shadow: 0 6px 25px rgba(147, 51, 234, 0.4);
}

.send-button:active {
  transform: translateY(0);
  box-shadow: 0 2px 15px rgba(147, 51, 234, 0.3);
}

.send-button svg {
  width: 20px;
  height: 20px;
  fill: white;
  transition: transform 0.3s;
}

.send-button:hover svg {
  transform: translateX(2px);
}

/* Add microphone icon styling */
.mic-icon {
  position: absolute;
  right: 130px;
  top: 50%;
  transform: translateY(-50%);
  width: 24px;
  height: 24px;
  cursor: pointer;
  fill: rgba(255, 255, 255, 0.8);
  transition: all 0.3s;
  background: rgba(147, 51, 234, 0.2);
  padding: 8px;
  border-radius: 50%;
  backdrop-filter: blur(5px);
}

.mic-icon:hover {
  fill: white;
  background: rgba(147, 51, 234, 0.3);
  transform: translateY(-50%) scale(1.1);
}

.mic-icon.listening {
  animation: pulseIcon 1.5s infinite;
}

@keyframes pulseIcon {
  0% { transform: translateY(-50%) scale(1); }
  50% { transform: translateY(-50%) scale(1.1); }
  100% { transform: translateY(-50%) scale(1); }
}

/* Add input status indicators */
.input-status {
  position: absolute;
  right: 20px;
  top: 50%;
  transform: translateY(-50%);
  display: flex;
  gap: 8px;
}

.status-dot {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.3);
  transition: all 0.3s;
}

.status-dot.active {
  background: rgb(76, 175, 80);
  box-shadow: 0 0 8px rgba(76, 175, 80, 0.5);
}

/* Mobile optimizations */
@media (max-width: 768px) {
  .chat-input {
    padding: 14px 18px;
    font-size: 15px;
  }
  
  .send-button {
    padding: 14px 25px;
    font-size: 14px;
  }
  
  .mic-icon {
    right: 110px;
    width: 22px;
    height: 22px;
  }
}

@media (max-width: 480px) {
  .chat-input {
    padding: 12px 16px;
    font-size: 14px;
  }
  
  .send-button {
    padding: 12px 20px;
  }
  
  .mic-icon {
    right: 90px;
  }
}

.eye {
  width: 10px;
  height: 10px;
  background: white;
  border-radius: 50%;
} 
.eye-left {
  left: 25%;
}
.eye-right {
  right: 25%;
}


/* Update music controls styles */
.music-controls {
  position: relative;
  width: 400px;
  max-width: 90%;
  margin: 0 auto;
  background: rgba(20, 20, 20, 0.95);
  border-radius: 20px;
  padding: 15px;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
  transition: all 0.3s;
  opacity: 0;
  transform: translateY(20px);
  pointer-events: auto;
  display: none;
  border: 1px solid rgba(167, 71, 254, 0.2);
  box-shadow: 
    0 0 20px rgba(147, 51, 234, 0.2),
    inset 0 0 10px rgba(147, 51, 234, 0.1);
}

.music-controls.visible {
  opacity: 1;
  transform: translateY(0);
  display: block;
}

body {
    margin: 0;
    min-height: 100vh;
    background: #000;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;
    perspective: 1000px;
    font-family: 'Poppins', sans-serif;
  }

  .orb-container {
    position: relative;
    width: 200px;
    height: 200px;
    transform-style: preserve-3d;
  }

  .magical-orb {
    position: relative;
    width: 100%;
    height: 100%;
    transform-style: preserve-3d;
    animation: float 4s ease-in-out infinite;
  }

  .orb-inner {
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background: radial-gradient(circle at 30% 30%, 
      rgb(147, 51, 234),
      rgb(88, 28, 135));
    box-shadow: 0 0 60px rgba(147, 51, 234, 0.4);
    transform-style: preserve-3d;
    animation: pulse 2s ease-in-out infinite;
    transition: background 0.3s, box-shadow 0.3s;
  }
  .data-stream {
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background: 
      radial-gradient(circle at center, 
        transparent 30%, 
        rgba(0, 255, 255, 0.1) 70%,
        transparent 71%
      );
    animation: dataStream 5s linear infinite;
    transform-style: preserve-3d;
  }

  .energy-ring {
    position: absolute;
    width: 120%;
    height: 120%;
    top: -10%;
    left: -10%;
    border-radius: 50%;
    border: 2px solid rgba(0, 255, 255, 0.3);
    animation: energyRing 6s ease-in-out infinite;
    transform-style: preserve-3d;
  }

  .thunder-wave {
    position: absolute;
    width: 140%;
    height: 140%;
    top: -20%;
    left: -20%;
    border-radius: 50%;
    background: 
      repeating-radial-gradient(
        circle at center,
        transparent 0%,
        rgba(147, 51, 234, 0.1) 2%,
        rgba(167, 71, 254, 0.2) 3%,
        transparent 4%
      );
    filter: blur(1px);
    animation: thunderWave 3s linear infinite;
    mix-blend-mode: screen;
  }

  .eyes-container {
    position: absolute;
    width: 100%;
    height: 100%;
    z-index: 2;
    animation: eyesFloat 4s ease-in-out infinite;
  }

  .eye {
    position: absolute;
    width: 30px;
    height: 30px;
    background: white;
    border-radius: 50%;
    top: 35%;
    animation: blink 4s infinite;
    overflow: hidden;
    transition: transform 0.3s ease-out;
  }

  .eye-left {
    left: 25%;
  }

  .eye-right {
    right: 25%;
  }

  .pupil {
    position: absolute;
    width: 12px;
    height: 12px;
    background: #000;
    border-radius: 50%;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    animation: lookAround 8s infinite;
  }

  @keyframes thunderWave {
    0% {
      transform: scale(0.8) rotate(0deg);
      opacity: 0.3;
    }
    50% {
      transform: scale(1.2) rotate(180deg);
      opacity: 0.8;
    }
    100% {
      transform: scale(0.8) rotate(360deg);
      opacity: 0.3;
    }
  }

  @keyframes float {
    0%, 100% { transform: translateY(-10px); }
    50% { transform: translateY(10px); }
  }

  @keyframes blink {
    0%, 48%, 52%, 100% { transform: scaleY(1); }
    50% { transform: scaleY(0.1); }
  }

  @keyframes lookAround {
    0%, 100% { transform: translate(-50%, -50%); }
    15% { transform: translate(-100%, -50%); }
    30% { transform: translate(-50%, -100%); }
    45% { transform: translate(0%, -50%); }
    60% { transform: translate(-50%, 0%); }
    75% { transform: translate(-50%, -50%); }
  }

  @keyframes eyesFloat {
    0%, 100% { transform: translateY(-5px); }
    50% { transform: translateY(5px); }
  }
  .speech-bubble {
    position: absolute;
    top: -80px;
    left: 50%;
    transform: translateX(-50%);
    background: rgba(147, 51, 234, 0.3);
    backdrop-filter: blur(10px);
    padding: 15px 20px;
    border-radius: 20px;
    max-width: 300px;
    min-width: 150px;
    color: white;
    font-size: 14px;
    opacity: 0;
    transition: all 0.3s;
    pointer-events: none;
    z-index: 1000;
    text-align: center;
    box-shadow: 0 0 20px rgba(147, 51, 234, 0.2);
    display: block;
  }

  .speech-bubble::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 0;
    height: 0;
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
    border-top: 12px solid rgba(147, 51, 234, 0.3);
  }

  .speech-bubble.active {
    opacity: 1;
    top: -100px;
    transform: translateX(-50%) scale(1);
    visibility: visible;
  }

  .speech-bubble.thinking {
    content: 'Thinking...';
  }

  .thinking-dots {
    display: none;
    justify-content: center;
    gap: 4px;
    margin-top: 10px;
  }

  .dot {
    width: 8px;
    height: 8px;
    background: rgb(147, 51, 234);
    border-radius: 50%;
    opacity: 0.6;
  }

  .thinking .thinking-dots {
    display: flex;
  }

  .thinking .dot {
    animation: dotPulse 1.4s infinite;
  }

  .thinking .dot:nth-child(2) {
    animation-delay: 0.2s;
  }

  .thinking .dot:nth-child(3) {
    animation-delay: 0.4s;
  }

  @keyframes dotPulse {
    0%, 100% { transform: scale(1); opacity: 0.6; }
    50% { transform: scale(1.5); opacity: 1; }
  }

  /* Click animation for the orb */
  @keyframes clickPulse {
    0% { transform: scale(1); }
    50% { transform: scale(0.95); }
    100% { transform: scale(1); }
  }

  .orb-click {
    animation: clickPulse 0.3s ease-out;
  }

  /* Enhance existing animations */
  @keyframes thinking {
    0% { 
      transform: rotate(0deg) scale(1) translateY(0px);
      filter: brightness(1);
    }
    25% { 
      transform: rotate(5deg) scale(1.1) translateY(-5px);
      filter: brightness(1.2);
    }
    75% { 
      transform: rotate(-5deg) scale(0.9) translateY(5px);
      filter: brightness(0.9);
    }
    100% { 
      transform: rotate(0deg) scale(1) translateY(0px);
      filter: brightness(1);
    }
  }

  /* Responsive design */
  @media (max-width: 768px) {
    .orb-container {
      width: 150px;
      height: 150px;
    }

    .chat-container {
      width: 90%;
      max-width: 400px;
    }

    .speech-bubble {
      width: 80%;
      max-width: 300px;
      font-size: 12px;
    }

    .eye {
      width: 20px;
      height: 20px;
    }

    .pupil {
      width: 8px;
      height: 8px;
    }
  }

  @media (max-width: 480px) {
    .orb-container {
      width: 120px;
      height: 120px;
    }
    .eye {
      width: 12px;
      height: 12px;
    }
    .eye-left {
      left: 20px;
    }
    .eye-right {
      right: 20px;
    }
    .pupil {
      width: 10px;
      height: 10px;
    }
    .chat-container {
      padding: 10px;
    }

    .chat-input {
      font-size: 14px;
    }

    .send-button {
      padding: 8px 15px;
    }
  } 
  
  .chat-history-icon {
    position: fixed;
    top: 20px;
    right: 20px;
    width: 50px;
    height: 50px;
    background: rgba(147, 51, 234, 0.2);
    backdrop-filter: blur(10px);
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    transition: transform 0.3s, background 0.3s;
    z-index: 1000;
  }

  .chat-history-icon:hover {
    transform: scale(1.1);
    background: rgba(147, 51, 234, 0.3);
  }

  .chat-history-icon svg {
    width: 24px;
    height: 24px;
    fill: white;
  }

  .idle-message {
    position: absolute;
    top: -60px;
    left: 50%;
    transform: translateX(-50%);
    color: rgba(255, 255, 255, 0.7);
    font-size: 14px;
    opacity: 0;
    transition: opacity 0.3s;
    text-align: center;
    pointer-events: none;
  }

  .idle-message.visible {
    opacity: 1;
  }

  /* Add a subtle glow effect when visible */
  .chat-container.visible .input-group {
    animation: fadeIn 0.3s ease-out;
  }

  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }

  /* Add microphone icon styles */
  .mic-icon {
    position: absolute;
    right: 60px;
    top: 50%;
    transform: translateY(-50%);
    width: 24px;
    height: 24px;
    cursor: pointer;
    fill: white;
    opacity: 0.7;
    transition: opacity 0.3s;
  }

  .mic-icon:hover {
    opacity: 1;
  }

  .mic-icon.listening {
    animation: pulseRed 1.5s infinite;
  }

  @keyframes pulseRed {
    0% { fill: white; }
    50% { fill: #ff4444; }
    100% { fill: white; }
  }

  /* Remove the mic-icon styles and add orb listening state styles */
  .orb-container.listening .magical-orb {
    animation: listeningPulse 1.5s infinite !important;
  }

  .orb-container.listening .thunder-wave {
    animation: thunderWave 1.5s linear infinite;
    opacity: 0.9;
    filter: hue-rotate(45deg);
  }

  @keyframes listeningPulse {
    0% { transform: scale(1); filter: brightness(1); }
    50% { transform: scale(1.05); filter: brightness(1.2); }
    100% { transform: scale(1); filter: brightness(1); }
  }

  /* Update speech bubble styles for listening state */
  .speech-bubble.listening {
    background: rgba(255, 68, 68, 0.3);
  }

  .speech-bubble.listening::after {
    border-top-color: rgba(255, 68, 68, 0.3);
  }

  /* Add these styles for the keyboard icon */
  .keyboard-icon {
    position: fixed;
    top: 20px;
    left: 20px;
    width: 40px;
    height: 40px;
    background: rgba(147, 51, 234, 0.2);
    backdrop-filter: blur(10px);
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    transition: transform 0.3s, background 0.3s;
    z-index: 1000;
  }

  .keyboard-icon:hover {
    transform: scale(1.1);
    background: rgba(147, 51, 234, 0.3);
  }

  .keyboard-icon svg {
    width: 20px;
    height: 20px;
    fill: white;
  }

  .keyboard-icon.active {
    background: rgba(147, 51, 234, 0.4);
    transform: scale(0.95);
  }
  .caption-container {
    position: absolute;
    top: -40px;
    left: 50%;
    transform: translateX(-50%);
    background: rgba(147, 51, 234, 0.2);
    padding: 8px 16px;
    border-radius: 12px;
    opacity: 0;
    transition: opacity 0.3s;
    pointer-events: none;
  }

  .caption-text {
    color: white;
    font-size: 14px;
    text-align: center;
  }

  /* Add emotion styles with !important to override default state */
  .orb-container[data-emotion="happy"] .orb-inner {
    background: radial-gradient(circle at 30% 30%, 
      rgb(255, 189, 89),
      rgb(255, 145, 48)) !important;
    box-shadow: 0 0 60px rgba(255, 166, 0, 0.4) !important;
  }

  .orb-container[data-emotion="sad"] .orb-inner {
    background: radial-gradient(circle at 30% 30%, 
      rgb(100, 181, 246),
      rgb(30, 136, 229)) !important;
    box-shadow: 0 0 60px rgba(30, 136, 229, 0.4) !important;
  }

  .orb-container[data-emotion="angry"] .orb-inner {
    background: radial-gradient(circle at 30% 30%, 
      rgb(255, 82, 82),
      rgb(211, 47, 47)) !important;
    box-shadow: 0 0 60px rgba(211, 47, 47, 0.4) !important;
  }

  .orb-container[data-emotion="confused"] .orb-inner {
    background: radial-gradient(circle at 30% 30%, 
      rgb(171, 71, 188),
      rgb(142, 36, 170)) !important;
    box-shadow: 0 0 60px rgba(142, 36, 170, 0.4) !important;
  }

  /* Update eye styles to handle emotions */
  .eye {
    position: absolute;
    width: 30px;
    height: 30px;
    background: white;
    border-radius: 50%;
    top: 35%;
    animation: blink 4s infinite;
    overflow: hidden;
    transition: transform 0.3s ease-out;
  }

  /* Add emotion-specific eye animations with !important */
  .orb-container[data-emotion="happy"] .eye {
    transform: scale(1.1) translateY(-2px) !important;
  }

  .orb-container[data-emotion="sad"] .eye {
    transform: scale(0.9) translateY(2px) !important;
  }

  .orb-container[data-emotion="angry"] .eye {
    transform: scaleY(0.8) !important;
  }

  .orb-container[data-emotion="confused"] .eye-left {
    transform: translateY(-2px) !important;
  }

  .orb-container[data-emotion="confused"] .eye-right {
    transform: translateY(2px) !important;
  }

  /* Add these emotion-specific animations */
  @keyframes happyBounce {
    0%, 100% { transform: translateY(-10px) scale(1); }
    50% { transform: translateY(10px) scale(1.1); }
  }

  @keyframes sadDroop {
    0%, 100% { transform: translateY(0) scale(1); }
    50% { transform: translateY(15px) scale(0.95); }
  }

  @keyframes angryShake {
    0%, 100% { transform: translateX(0) scale(1); }
    25% { transform: translateX(-5px) scale(1.05); }
    75% { transform: translateX(5px) scale(1.05); }
  }

  @keyframes confusedSpin {
    0% { transform: rotate(-5deg) scale(1); }
    50% { transform: rotate(5deg) scale(0.95); }
    100% { transform: rotate(-5deg) scale(1); }
  }

  /* Add thunder effects for angry state */
  @keyframes angryThunder {
    0% { opacity: 0.3; transform: scale(0.8); }
    50% { opacity: 1; transform: scale(1.3); }
    51% { opacity: 0.3; transform: scale(0.8); }
    100% { opacity: 0.3; transform: scale(0.8); }
  }

  /* Update emotion styles with animations */
  .orb-container[data-emotion="happy"] .magical-orb {
    animation: happyBounce 2s ease-in-out infinite !important;
  }

  .orb-container[data-emotion="happy"] .thunder-wave {
    opacity: 0.6;
    filter: hue-rotate(280deg) brightness(1.5);
  }

  .orb-container[data-emotion="sad"] .magical-orb {
    animation: sadDroop 3s ease-in-out infinite !important;
  }

  .orb-container[data-emotion="sad"] .thunder-wave {
    opacity: 0.3;
    filter: hue-rotate(180deg);
  }

  .orb-container[data-emotion="angry"] .magical-orb {
    animation: angryShake 0.5s ease-in-out infinite !important;
  }

  .orb-container[data-emotion="angry"] .thunder-wave {
    animation: angryThunder 1s linear infinite !important;
    filter: hue-rotate(320deg) brightness(1.5);
  }

  .orb-container[data-emotion="confused"] .magical-orb {
    animation: confusedSpin 3s ease-in-out infinite !important;
  }

  .orb-container[data-emotion="confused"] .thunder-wave {
    animation: thunderWave 4s linear infinite reverse;
    filter: hue-rotate(90deg);
  }

  /* Add particle effects for emotional states */
  .emotion-particles {
    position: absolute;
    width: 100%;
    height: 100%;
    pointer-events: none;
    opacity: 0;
    transition: opacity 0.3s;
  }

  .orb-container[data-emotion] .emotion-particles {
    opacity: 1;
  }

  @keyframes particleFloat {
    0% { transform: translateY(0) scale(1); opacity: 1; }
    100% { transform: translateY(-50px) scale(0); opacity: 0; }
  }

  .particle {
    position: absolute;
    width: 8px;
    height: 8px;
    border-radius: 50%;
    animation: particleFloat 2s ease-out forwards;
  }

  /* Add this to the existing eye animations */
  .orb-container[data-emotion="happy"] .pupil {
    animation: happyPupils 3s ease-in-out infinite !important;
  }

  .orb-container[data-emotion="sad"] .pupil {
    animation: sadPupils 3s ease-in-out infinite !important;
  }

  .orb-container[data-emotion="angry"] .pupil {
    animation: angryPupils 1s ease-in-out infinite !important;
  }

  .orb-container[data-emotion="confused"] .pupil {
    animation: confusedPupils 3s linear infinite !important;
  }

  @keyframes happyPupils {
    0%, 100% { transform: translate(-50%, -50%) scale(1); }
    50% { transform: translate(-50%, -50%) scale(1.2); }
  }

  @keyframes sadPupils {
    0%, 100% { transform: translate(-50%, -50%); }
    50% { transform: translate(-50%, 0%); }
  }

  @keyframes angryPupils {
    0%, 100% { transform: translate(-50%, -50%) scaleY(0.8); }
    50% { transform: translate(-50%, -50%) scaleY(1.2); }
  }

  @keyframes confusedPupils {
    0% { transform: translate(-100%, -50%); }
    25% { transform: translate(-50%, -100%); }
    50% { transform: translate(0%, -50%); }
    75% { transform: translate(-50%, 0%); }
    100% { transform: translate(-100%, -50%); }
  }

  /* Thunderbolt icon styles */
  .thunderbolt-icon {
    position: fixed;
    top: 20px;
    left: 80px; /* Position it next to keyboard icon */
    width: 40px;
    height: 40px;
    background: rgba(255, 215, 0, 0.2);
    backdrop-filter: blur(10px);
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    transition: transform 0.3s, background 0.3s;
    z-index: 1000;
  }

  .thunderbolt-icon:hover {
    transform: scale(1.1);
    background: rgba(255, 215, 0, 0.3);
  }

  .thunderbolt-icon svg {
    width: 20px;
    height: 20px;
    fill: #FFD700;
  }

  .thunderbolt-icon.active {
    background: rgba(255, 215, 0, 0.4);
    transform: scale(0.95);
  }

  /* Lightning effect styles */
  .lightning-effect {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    opacity: 0;
    z-index: 10;
  }

  .lightning-effect.active {
    animation: lightningFlash 0.5s ease-out;
  }

  @keyframes lightningFlash {
    0% {
      opacity: 0;
    }
    25% {
      opacity: 1;
      background: linear-gradient(45deg, 
        rgba(255, 255, 255, 0.8),
        rgba(255, 215, 0, 0.8)
      );
    }
    50% {
      opacity: 0;
    }
    75% {
      opacity: 1;
      background: linear-gradient(-45deg,
        rgba(255, 255, 255, 0.6),
        rgba(255, 215, 0, 0.6)
      );
    }
    100% {
      opacity: 0;
    }
  }

  /* Hurt animation styles */
  @keyframes hurtShake {
    0%, 100% { transform: translate(0, 0) scale(1); }
    25% { transform: translate(-10px, 5px) scale(0.95); }
    50% { transform: translate(8px, -4px) scale(0.97); }
    75% { transform: translate(-6px, 3px) scale(0.98); }
  }

  @keyframes hurtEyes {
    0%, 100% { transform: scaleY(1); }
    50% { transform: scaleY(0.2); }
  }

  .orb-container.hurt .magical-orb {
    animation: hurtShake 0.5s ease-out !important;
  }

  .orb-container.hurt .eye {
    animation: hurtEyes 0.5s ease-out !important;
  }

  .orb-container.hurt .thunder-wave {
    animation: thunderWave 0.5s linear infinite !important;
    opacity: 1 !important;
    filter: hue-rotate(180deg) brightness(1.5) !important;
  }

  /* Add hurt state styles */
  .orb-container.hurt .orb-inner {
    background: radial-gradient(circle at 30% 30%, 
      rgb(255, 165, 0),
      rgb(255, 69, 0)) !important;
    box-shadow: 0 0 60px rgba(255, 69, 0, 0.6) !important;
  }

  /* Add these new icon styles */
  .tickle-icon, .love-icon, .dizzy-icon {
    position: fixed;
    width: 40px;
    height: 40px;
    background: rgba(147, 51, 234, 0.2);
    backdrop-filter: blur(10px);
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    transition: transform 0.3s, background 0.3s;
    z-index: 1000;
  }

  .tickle-icon {
    top: 20px;
    left: 140px;
    background: rgba(255, 182, 193, 0.2);
  }

  .love-icon {
    top: 20px;
    left: 200px;
    background: rgba(255, 105, 180, 0.2);
  }

  .dizzy-icon {
    top: 20px;
    left: 260px;
    background: rgba(138, 43, 226, 0.2);
  }

  .tickle-icon:hover, .love-icon:hover, .dizzy-icon:hover {
    transform: scale(1.1);
  }

  .tickle-icon svg, .love-icon svg, .dizzy-icon svg {
    width: 24px;
    height: 24px;
    fill: white;
  }

  /* Add new animation keyframes */
  @keyframes tickle {
    0%, 100% { transform: rotate(0) scale(1); }
    25% { transform: rotate(15deg) scale(1.1); }
    50% { transform: rotate(-15deg) scale(0.9); }
    75% { transform: rotate(10deg) scale(1.05); }
  }

  @keyframes love {
    0% { transform: scale(1); }
    25% { transform: scale(1.2); }
    50% { transform: scale(0.95); }
    75% { transform: scale(1.1); }
    100% { transform: scale(1); }
  }

  @keyframes dizzy {
    0% { transform: rotate(0) scale(1); }
    100% { transform: rotate(360deg) scale(1); }
  }

  @keyframes heartBeat {
    0% { transform: scale(1); opacity: 1; }
    50% { transform: scale(1.5); opacity: 0; }
    100% { transform: scale(2); opacity: 0; }
  }

  /* Add heart particles style */
  .heart-particle {
    position: absolute;
    width: 20px;
    height: 20px;
    background: pink;
    clip-path: path('M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z');
    animation: heartBeat 1s forwards;
  }

  /* Add stars for dizzy effect */
  .star-particle {
    position: absolute;
    width: 15px;
    height: 15px;
    background: yellow;
    clip-path: polygon(50% 0%, 61% 35%, 98% 35%, 68% 57%, 79% 91%, 50% 70%, 21% 91%, 32% 57%, 2% 35%, 39% 35%);
    animation: starSpin 1s linear infinite;
  }

  @keyframes starSpin {
    0% { transform: rotate(0) scale(1); opacity: 1; }
    100% { transform: rotate(360deg) scale(0); opacity: 0; }
  }

  /* Add dizzy eyes animation */
  @keyframes dizzyEyes {
    0% { transform: rotate(0) translateX(0); }
    100% { transform: rotate(360deg) translateX(5px); }
  }

  .orb-container.dizzy .pupil {
    animation: dizzyEyes 0.5s linear infinite !important;
  }

  /* Add tickle eyes animation */
  @keyframes tickleEyes {
    0%, 100% { transform: translate(-50%, -50%); }
    25% { transform: translate(-30%, -60%); }
    50% { transform: translate(-70%, -40%); }
    75% { transform: translate(-40%, -30%); }
  }

  .orb-container.tickled .pupil {
    animation: tickleEyes 0.3s linear infinite !important;
  }

  /* Add love eyes animation */
  @keyframes loveEyes {
    0%, 100% { clip-path: none; background: white; }
    50% { 
      clip-path: path('M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z');
      background: pink;
    }
  }

  .orb-container.loved .eye {
    animation: loveEyes 0.5s ease-in-out infinite !important;
  }

  /* Add these new interaction icons */
  .sleep-icon, .party-icon, .sneeze-icon {
    position: fixed;
    width: 40px;
    height: 40px;
    backdrop-filter: blur(10px);
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    transition: transform 0.3s, background 0.3s;
    z-index: 1000;
  }

  .sleep-icon {
    top: 20px;
    left: 320px;
    background: rgba(70, 130, 180, 0.2);
  }

  .party-icon {
    top: 20px;
    left: 380px;
    background: rgba(255, 69, 0, 0.2);
  }

  .sneeze-icon {
    top: 20px;
    left: 440px;
    background: rgba(144, 238, 144, 0.2);
  }

  /* Add new animations */
  @keyframes sleep {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(5px); }
  }

  @keyframes snore {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.1); }
  }

  @keyframes party {
    0% { transform: rotate(0) scale(1); filter: hue-rotate(0deg); }
    25% { transform: rotate(15deg) scale(1.1); filter: hue-rotate(90deg); }
    50% { transform: rotate(-15deg) scale(0.9); filter: hue-rotate(180deg); }
    75% { transform: rotate(10deg) scale(1.05); filter: hue-rotate(270deg); }
    100% { transform: rotate(0) scale(1); filter: hue-rotate(360deg); }
  }

  @keyframes sneeze {
    0% { transform: scale(1) rotate(0); }
    25% { transform: scale(1.1) rotate(-5deg); }
    50% { transform: scale(0.9) rotate(5deg); }
    75% { transform: scale(1.2) rotate(-10deg); }
    90% { transform: scale(0.8) rotate(10deg); }
    100% { transform: scale(1) rotate(0); }
  }

  /* Add sleeping Z's animation */
  @keyframes floatingZ {
    0% { transform: translate(0, 0) rotate(0) scale(1); opacity: 1; }
    100% { transform: translate(-50px, -50px) rotate(20deg) scale(0); opacity: 0; }
  }

  .z-particle {
    position: absolute;
    font-family: 'Arial', sans-serif;
    font-size: 24px;
    font-weight: bold;
    color: rgba(70, 130, 180, 0.8);
    animation: floatingZ 2s ease-out forwards;
  }

  /* Add party confetti */
  .confetti {
    position: absolute;
    width: 10px;
    height: 10px;
    animation: confettiFall 3s linear forwards;
  }

  @keyframes confettiFall {
    0% { transform: translateY(0) rotate(0) scale(1); opacity: 1; }
    100% { transform: translateY(100vh) rotate(720deg) scale(0); opacity: 0; }
  }

  /* Add sneeze particles */
  .sneeze-droplet {
    position: absolute;
    width: 8px;
    height: 8px;
    background: rgba(144, 238, 144, 0.6);
    border-radius: 50%;
    animation: sneezeSpray 1s ease-out forwards;
  }

  @keyframes sneezeSpray {
    0% { transform: scale(1) translateX(0); opacity: 1; }
    100% { transform: scale(0) translateX(100px); opacity: 0; }
  }

  /* Add sleeping eyes animation */
  @keyframes sleepyEyes {
    0%, 100% { transform: scaleY(1); }
    50% { transform: scaleY(0.1); }
  }

  .orb-container.sleeping .eye {
    animation: sleepyEyes 3s ease-in-out infinite !important;
  }

  /* Add party eyes animation */
  @keyframes partyEyes {
    0% { background: red; }
    33% { background: green; }
    66% { background: blue; }
    100% { background: red; }
  }

  .orb-container.partying .eye {
    animation: partyEyes 1s linear infinite !important;
  }

  /* Add sneeze eyes animation */
  @keyframes sneezeEyes {
    0% { transform: scaleY(1); }
    50% { transform: scaleY(0.1) rotate(10deg); }
    100% { transform: scaleY(1); }
  }

  .orb-container.sneezing .eye {
    animation: sneezeEyes 0.5s ease-out !important;
  }

  /* Add these styles for search results and music visualization */
  .search-results {
    position: absolute;
    top: -125px;
    left: 50%;
    transform: translateX(-50%) translateY(-20px);
    width: 300px;
    background: rgba(147, 51, 234, 0.1);
    backdrop-filter: blur(10px);
    border-radius: 15px;
    padding: 10px;
    z-index: 1000;
    opacity: 0;
    transition: all 0.3s ease-out;
    pointer-events: auto;
  }

  .result-item {
    display: flex;
    align-items: center;
    padding: 10px;
    margin: 5px 0;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 10px;
    cursor: pointer;
    transition: all 0.3s;
    animation: slideIn 0.3s ease-out forwards;
    opacity: 0;
    position: relative;
    z-index: 1000;
    pointer-events: auto; /* Ensure clicks are captured */
  }

  .result-item * {
    pointer-events: none; /* Make child elements pass clicks to parent */
  }

  .result-item:hover {
    background: rgba(255, 255, 255, 0.2);
    transform: scale(1.02);
  }

  @keyframes slideIn {
    from {
      opacity: 0;
      transform: translateX(-20px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  /* Add animation delay for each result item */
  .result-item:nth-child(1) { animation-delay: 0.1s; }
  .result-item:nth-child(2) { animation-delay: 0.2s; }
  .result-item:nth-child(3) { animation-delay: 0.3s; }
  .result-item:nth-child(4) { animation-delay: 0.4s; }
  .result-item:nth-child(5) { animation-delay: 0.5s; }

  .result-thumb {
    width: 60px;
    height: 60px;
    border-radius: 8px;
    overflow: hidden;
    margin-right: 10px;
  }

  .result-thumb img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .result-info {
    flex: 1;
  }

  .result-title {
    color: white;
    font-size: 12px;
    margin-bottom: 4px;
  }
  .result-duration {
    color: rgba(255, 255, 255, 0.7);
    font-size: 10px;
  }
  .result-channel {
    color: rgba(255, 255, 255, 0.7);
    font-size: 10px;
  }

  .search-particle {
    position: absolute;
    width: 4px;
    height: 4px;
    background: rgb(147, 51, 234);
    border-radius: 50%;
    animation: searchFloat 1s ease-out forwards;
  }

  .music-particle {
    position: absolute;
    width: 6px;
    height: 6px;
    background: rgb(147, 51, 234);
    border-radius: 50%;
    animation: musicFloat 1s ease-out forwards;
  }

  @keyframes searchFloat {
    0% { transform: translateY(0) scale(1); opacity: 1; }
    100% { transform: translateY(-50px) scale(0); opacity: 0; }
  }

  @keyframes musicFloat {
    0% { transform: translateY(0) scale(1); opacity: 1; }
    50% { transform: translateY(-30px) scale(1.5); opacity: 0.5; }
    100% { transform: translateY(-60px) scale(0); opacity: 0; }
  }

  /* Update music controls styles */
  .music-controls {
    position: fixed;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    width: 400px;
    max-width: 90%;
    background: rgba(20, 20, 20, 0.95);
    border-radius: 20px;
    padding: 15px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
    transition: all 0.3s;
  }

  .music-controls.active {
    bottom: 20px;
    opacity: 1;
  }

  .main-controls {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 10px;
  }

  .music-visualizer {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: -1;
    display: none;
    border-radius: 8px;
    overflow: hidden;
  }

  .visualizer-container.active {
    display: flex;
    justify-content: center;
    align-items: flex-end;
  }

  .visualizer-particle {
    position: relative;
    width: 3px;
    height: 20px;
    background: rgba(147, 51, 234, 0.7);
    border-radius: 1px;
    transform-origin: bottom;
    animation: visualizerBounce 0.5s infinite;
    margin: 0 2px;
    transition: height 0.3s ease;
    box-shadow: 0 0 8px rgba(147, 51, 234, 0.3);
  }

  @keyframes visualizerBounce {
    0%, 100% { 
      transform: scaleY(0.2);
      background: rgba(147, 51, 234, 0.4); 
    }
    50% { 
      transform: scaleY(1);
      background: rgba(147, 51, 234, 0.9);
    }
  }

  .music-info {
    display: flex;
    justify-content: space-between;
    align-items: center;
    color: white;
  }

  .now-playing {
    font-size: 14px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 200px;
  }

  .time-info {
    font-size: 12px;
    color: #aaa;
  }

  .progress-container {
    width: 100%;
    height: 4px;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 2px;
    cursor: pointer;
    position: relative;
  }

  .progress-bar {
    height: 100%;
    background: rgb(147, 51, 234);
    border-radius: 2px;
    width: 0%;
    transition: width 0.1s linear;
  }

  .progress-buffer {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 2px;
    width: 0%;
  }

  .controls-buttons {
    display: flex;
    align-items: center;
    gap: 15px;
  }

  .control-button {
    background: none;
    border: none;
    padding: 8px;
    cursor: pointer;
    border-radius: 50%;
    transition: all 0.2s;
    box-shadow: 0 0 15px rgba(147, 51, 234, 0.2);
  }

  .control-button svg {
    width: 24px;
    height: 24px;
    fill: white;
  }

  .control-button:hover {
    background: rgba(255, 255, 255, 0.1);
    box-shadow: 0 0 20px rgba(147, 51, 234, 0.4);
  }

  .volume-control {
    display: flex;
    align-items: center;
    gap: 5px;
    margin-left: auto;
  }

  .volume-control svg {
    fill: white;
  }

  .volume-slider {
    width: 60px;
    height: 4px;
    -webkit-appearance: none;
    appearance: none;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 2px;
    transition: all 0.2s;
  }

  .volume-slider::-webkit-slider-thumb {
    -webkit-appearance: none;
    width: 12px;
    height: 12px;
    background: rgb(147, 51, 234);
    border-radius: 50%;
    cursor: pointer;
  }

  /* Disco lights */
  .disco-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 0;
    display: none;
  }

  .disco-container.active {
    display: block;
  }

  .disco-light {
    position: absolute;
    width: 0;
    height: 0;
    border-radius: 50%;
    opacity: 0;
    animation: discoLight 4s infinite;
  }

  @keyframes discoLight {
    0% { transform: scale(0); opacity: 0; }
    50% { transform: scale(2); opacity: 0.1; }
    100% { transform: scale(0); opacity: 0; }
  }

  /* Add these styles for the settings menu */
  .settings-icon {
    position: fixed;
    top: 20px;
    right: 80px; /* Position after chat history icon */
    width: 40px;
    height: 40px;
    background: rgba(147, 51, 234, 0.1);
    backdrop-filter: blur(10px);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s;
    z-index: 1000;
  }

  .settings-icon:hover {
    background: rgba(147, 51, 234, 0.2);
    transform: rotate(45deg);
  }

  .settings-icon svg {
    width: 24px;
    height: 24px;
    fill: white;
  }

  .settings-menu {
    position: fixed;
    top: 70px;
    right: 80px;
    background: rgba(147, 51, 234, 0.1);
    backdrop-filter: blur(10px);
    border-radius: 15px;
    padding: 20px;
    width: 300px;
    opacity: 0;
    transform: translateY(-10px);
    pointer-events: none;
    transition: all 0.3s;
    z-index: 999;
  }

  .settings-menu.active {
    opacity: 1;
    transform: translateY(0);
    pointer-events: auto;
  }

  .settings-section {
    margin-bottom: 15px;
  }

  .settings-title {
    color: white;
    font-size: 18px;
    margin-bottom: 15px;
    font-weight: 500;
  }

  .settings-option {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 10px;
  }

  .settings-label {
    color: rgba(255, 255, 255, 0.9);
    font-size: 14px;
  }

  /* Toggle switch styles */
  .toggle-switch {
    position: relative;
    width: 50px;
    height: 24px;
  }

  .toggle-switch input {
    opacity: 0;
    width: 0;
    height: 0;
  }

  .toggle-slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(255, 255, 255, 0.2);
    transition: .4s;
    border-radius: 34px;
  }

  .toggle-slider:before {
    position: absolute;
    content: "";
    height: 20px;
    width: 20px;
    left: 2px;
    bottom: 2px;
    background-color: white;
    transition: .4s;
    border-radius: 50%;
  }

  input:checked + .toggle-slider {
    background-color: rgb(147, 51, 234);
  }

  input:checked + .toggle-slider:before {
    transform: translateX(26px);
  }

  .settings-select {
    width: 120px;
    padding: 6px;
    border-radius: 4px;
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    color: white;
    font-size: 14px;
    outline: none;
    cursor: pointer;
  }

  .settings-select:hover {
    background: rgba(255, 255, 255, 0.15);
  }

  .settings-select:focus {
    border-color: rgba(147, 51, 234, 0.5);
    box-shadow: 0 0 0 2px rgba(147, 51, 234, 0.2);
  }

  .settings-select option {
    background: #1a1a1a;
    color: white;
  }

  /* Add more spacing between sections */
  .settings-section:not(:last-child) {
    margin-bottom: 20px;
    padding-bottom: 20px;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  }

  .research-container {
    padding: 20px;
    max-width: 1200px;
    margin: 0 auto;
  }

  .loading-animation {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100vh;
  }

  .spinner {
    width: 50px;
    height: 50px;
    border: 5px solid #f3f3f3;
    border-top: 5px solid #3498db;
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  .sources-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 20px;
    margin-top: 20px;
  }

  .source-card {
    background: #ffffff;
    border-radius: 10px;
    padding: 20px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    opacity: 0;
    transform: translateY(20px);
  }

  .source-card.fade-in {
    animation: fadeIn 0.5s ease forwards;
  }

  @keyframes fadeIn {
    to {
        opacity: 1;
        transform: translateY(0);
    }
  }

  .source-card h3 {
    color: #2c3e50;
    margin-bottom: 15px;
    border-bottom: 2px solid #3498db;
    padding-bottom: 10px;
  }

  .result-content {
    line-height: 1.6;
    color: #34495e;
  }

  .error {
    color: #e74c3c;
    font-style: italic;
  }

  /* Add responsive design improvements */
  @media (max-width: 768px) {
    .interaction-toolbar {
      bottom: 120px;
      padding: 10px;
      gap: 10px;
    }

    .chat-container.visible ~ .interaction-toolbar {
      bottom: 160px;
    }

    .toolbar-icon {
      width: 35px;
      height: 35px;
    }

    .toolbar-icon svg {
      width: 18px;
      height: 18px;
    }

    .chat-container {
      padding: 12px;
    }

    .chat-input {
      padding: 12px;
      font-size: 14px;
    }

    .send-button {
      padding: 12px 20px;
    }
  }

  @media (max-width: 480px) {
    .interaction-toolbar {
      bottom: 100px;
      gap: 8px;
      padding: 8px;
    }

    .chat-container.visible ~ .interaction-toolbar {
      bottom: 140px;
    }

    .toolbar-icon {
      width: 30px;
      height: 30px;
    }

    .toolbar-icon svg {
      width: 16px;
      height: 16px;
    }

    .chat-container {
      padding: 10px;
    }

    .chat-input {
      padding: 10px;
      font-size: 14px;
    }

    .send-button {
      padding: 10px 15px;
      font-size: 14px;
    }

    .music-controls {
      padding: 10px;
    }

    .control-button svg {
      width: 20px;
      height: 20px;
    }

    .volume-slider {
      width: 50px;
    }
  }

  /* Add styles for landscape mode */
  @media (max-height: 600px) and (orientation: landscape) {
    .interaction-toolbar {
      bottom: 90px;
    }

    .chat-container.visible ~ .interaction-toolbar {
      bottom: 120px;
    }

    .bottom-controls {
      padding: 10px;
    }

    .chat-container, .music-controls {
      padding: 8px;
    }
  }

  /* Magical Background Elements */
.magical-background {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  z-index: -1;
  background: radial-gradient(circle at center, 
    rgba(40, 0, 80, 1) 0%,
    rgba(20, 0, 40, 1) 100%);
}

.magical-mist {
  position: absolute;
  width: 150%;
  height: 150%;
  background: 
    linear-gradient(45deg,
      rgba(147, 51, 234, 0.05) 0%,
      rgba(167, 71, 254, 0.05) 25%,
      rgba(147, 51, 234, 0.05) 50%,
      rgba(187, 91, 254, 0.05) 75%,
      rgba(147, 51, 234, 0.05) 100%
    );
  filter: blur(15px);
  transform-origin: center;
  animation: mistFlow 30s linear infinite;
}

.aurora-layer {
  position: absolute;
  width: 200%;
  height: 200%;
  background: 
    linear-gradient(90deg,
      transparent 0%,
      rgba(147, 51, 234, 0.1) 25%,
      rgba(167, 71, 254, 0.1) 50%,
      rgba(147, 51, 234, 0.1) 75%,
      transparent 100%
    );
  filter: blur(30px);
  transform: rotate(-45deg);
  animation: auroraFlow 15s linear infinite;
}

.star-field {
  position: absolute;
  width: 100%;
  height: 100%;
  perspective: 1000px;
}

.star {
  position: absolute;
  width: 2px;
  height: 2px;
  background: white;
  border-radius: 50%;
  animation: starTwinkle var(--twinkle-duration, 4s) infinite;
}

.nebula {
  position: absolute;
  width: 300px;
  height: 300px;
  border-radius: 50%;
  background: radial-gradient(
    circle at center,
    rgba(147, 51, 234, 0.1) 0%,
    rgba(167, 71, 254, 0.05) 50%,
    transparent 70%
  );
  filter: blur(40px);
  animation: nebulaFloat 20s infinite;
}

@keyframes mistFlow {
  0% {
    transform: translate(-25%, -25%) rotate(0deg);
  }
  100% {
    transform: translate(-25%, -25%) rotate(360deg);
  }
}

@keyframes auroraFlow {
  0% {
    transform: translateX(-50%) rotate(-45deg);
  }
  100% {
    transform: translateX(0%) rotate(-45deg);
  }
}

@keyframes starTwinkle {
  0%, 100% {
    opacity: 0.2;
    transform: scale(0.8);
  }
  50% {
    opacity: 1;
    transform: scale(1.2);
  }
}

@keyframes nebulaFloat {
  0%, 100% {
    transform: translate(0, 0) scale(1);
    opacity: 0.3;
  }
  50% {
    transform: translate(50px, -30px) scale(1.2);
    opacity: 0.5;
  }
}

/* Power surge effect for interactions */
.power-surge {
  position: absolute;
  width: 100%;
  height: 100%;
  background: radial-gradient(
    circle at var(--x, 50%) var(--y, 50%),
    rgba(147, 51, 234, 0.2) 0%,
    transparent 50%
  );
  opacity: 0;
  transition: opacity 0.3s;
  pointer-events: none;
}

.power-surge.active {
  opacity: 1;
  animation: surgePulse 1s ease-out;
}

@keyframes surgePulse {
  0% {
    transform: scale(0);
    opacity: 0.5;
  }
  100% {
    transform: scale(2);
    opacity: 0;
  }
}

.floating-runes {
  position: absolute;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

.rune {
  position: absolute;
  width: 30px;
  height: 30px;
  background: rgba(147, 51, 234, 0.1);
  border: 1px solid rgba(167, 71, 254, 0.3);
  border-radius: 5px;
  animation: runeFloat 10s infinite;
}

.magical-particle {
  position: absolute;
  width: 3px;
  height: 3px;
  background: rgba(167, 71, 254, 0.6);
  border-radius: 50%;
  pointer-events: none;
  animation: particleRise 8s infinite;
}

.magical-glow {
  position: absolute;
  width: 200px;
  height: 200px;
  border-radius: 50%;
  background: radial-gradient(
    circle at center,
    rgba(147, 51, 234, 0.2) 0%,
    rgba(147, 51, 234, 0) 70%
  );
  filter: blur(20px);
  animation: glowPulse 4s infinite;
}

/* Background Animation Keyframes */
@keyframes mistFlow {
  0% { transform: translateX(-50%) translateY(-50%) rotate(0deg); }
  100% { transform: translateX(-50%) translateY(-50%) rotate(360deg); }
}

@keyframes runeFloat {
  0%, 100% { transform: translateY(0) rotate(0deg); opacity: 0.3; }
  50% { transform: translateY(-20px) rotate(180deg); opacity: 0.6; }
}

@keyframes particleRise {
  0% { 
    transform: translateY(100vh) scale(1);
    opacity: 0;
  }
  50% { 
    transform: translateY(50vh) scale(1.5);
    opacity: 0.6;
  }
  100% { 
    transform: translateY(0) scale(1);
    opacity: 0;
  }
}

@keyframes glowPulse {
  0%, 100% { transform: scale(1); opacity: 0.3; }
  50% { transform: scale(1.2); opacity: 0.5; }
}

/* Add magical sparkles */
.sparkle {
  position: absolute;
  width: 4px;
  height: 4px;
  background: white;
  border-radius: 50%;
  animation: sparkleFloat 3s infinite;
}

@keyframes sparkleFloat {
  0%, 100% { 
    transform: scale(0) rotate(0deg);
    opacity: 0;
  }
  50% { 
    transform: scale(1) rotate(180deg);
    opacity: 1;
    filter: blur(1px) brightness(1.5);
  }
}   

.chat-container,
.music-controls,
.interaction-toolbar {
  /* ...existing code... */
  border: 1px solid rgba(167, 71, 254, 0.2);
  box-shadow: 
    0 0 20px rgba(147, 51, 234, 0.2),
    inset 0 0 10px rgba(147, 51, 234, 0.1);
}

/* Add magical aura to buttons */
.toolbar-icon,
.nav-icon,
.control-button {
  /* ...existing code... */
  box-shadow: 0 0 15px rgba(147, 51, 234, 0.2);
}

.toolbar-icon:hover,
.nav-icon:hover,
.control-button:hover {
  /* ...existing code... */
  box-shadow: 0 0 20px rgba(147, 51, 234, 0.4);
}

/* Add this rule to hide interaction toolbar when chat is visible */
.chat-container.visible ~ .interaction-toolbar {
  bottom: -100px;
  opacity: 0;
  pointer-events: none;
}

/* Add these styles for the initial reveal animation */
.reveal-animation {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: radial-gradient(circle at center, 
    rgba(40, 0, 80, 0) 0%,
    rgba(20, 0, 40, 1) 100%);
  z-index: 1000;
  opacity: 1;
  pointer-events: none;
  transition: opacity 1.5s ease-out;
}

.magical-reveal {
  opacity: 0;
  transform: scale(0.8) translateY(20px);
  filter: blur(10px);
  transition: all 1.5s cubic-bezier(0.4, 0, 0.2, 1);
}

.magical-reveal.revealed {
  opacity: 1;
  transform: scale(1) translateY(0);
  filter: blur(0);
}

/* Add magical sparkles for the reveal */
.reveal-sparkle {
  position: absolute;
  width: 4px;
  height: 4px;
  background: white;
  border-radius: 50%;
  opacity: 0;
  pointer-events: none;
  animation: revealSparkle 1.5s ease-out forwards;
}

@keyframes revealSparkle {
  0% {
    transform: scale(0) rotate(0deg);
    opacity: 0;
  }
  50% {
    transform: scale(1.5) rotate(180deg);
    opacity: 1;
  }
  100% {
    transform: scale(0) rotate(360deg);
    opacity: 0;
  }
}

/* Add magical runes that appear during reveal */
.reveal-rune {
  position: absolute;
  width: 40px;
  height: 40px;
  border: 2px solid rgba(147, 51, 234, 0.5);
  border-radius: 8px;
  opacity: 0;
  pointer-events: none;
  animation: revealRune 2s ease-out forwards;
}

@keyframes revealRune {
  0% {
    transform: scale(0) rotate(0deg);
    opacity: 0;
  }
  50% {
    transform: scale(1) rotate(180deg);
    opacity: 0.5;
  }
  100% {
    transform: scale(0) rotate(360deg);
    opacity: 0;
  }
}

/* Add magical energy waves */
.reveal-wave {
  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  border: 2px solid rgba(147, 51, 234, 0.3);
  opacity: 0;
  pointer-events: none;
  animation: revealWave 2s ease-out forwards;
}

@keyframes revealWave {
  0% {
    transform: scale(0);
    opacity: 0.5;
  }
  100% {
    transform: scale(2);
    opacity: 0;
  }
}

/* Add these theme-specific styles at the top of your CSS */

/* Windy Theme */
.theme-windy .magical-background {
  background: radial-gradient(circle at center, 
    rgba(40, 0, 80, 1) 0%,
    rgba(20, 0, 40, 1) 100%);
}

.theme-windy .magical-mist {
  animation: windyMistFlow 20s linear infinite;
  opacity: 0.8;
}

.theme-windy .floating-runes {
  animation: windyRuneFloat 8s ease-in-out infinite;
}

.theme-windy .magical-particle {
  animation: windyParticleFloat 6s infinite;
}

@keyframes windyMistFlow {
  0% {
    transform: translate(-25%, -25%) rotate(0deg) skewX(-15deg);
  }
  100% {
    transform: translate(-25%, -25%) rotate(360deg) skewX(-15deg);
  }
}

@keyframes windyRuneFloat {
  0%, 100% {
    transform: translateX(0) rotate(0deg);
  }
  50% {
    transform: translateX(30px) rotate(10deg);
  }
}

@keyframes windyParticleFloat {
  0% {
    transform: translateX(0) translateY(0);
    opacity: 0;
  }
  50% {
    transform: translateX(100px) translateY(-50px);
    opacity: 0.8;
  }
  100% {
    transform: translateX(200px) translateY(-100px);
    opacity: 0;
  }
}

/* Snow Theme */
.theme-snow .magical-background {
  background: radial-gradient(circle at center, 
    rgb(20, 30, 48) 0%,
    rgb(10, 15, 24) 100%);
}

.theme-snow .magical-mist {
  background: linear-gradient(45deg,
    rgba(255, 255, 255, 0.05) 0%,
    rgba(200, 220, 255, 0.05) 50%,
    rgba(255, 255, 255, 0.05) 100%
  );
}

.theme-snow .snowflake {
  position: absolute;
  width: 4px;
  height: 4px;
  background: white;
  border-radius: 50%;
  pointer-events: none;
  animation: snowfall linear infinite;
}

@keyframes snowfall {
  0% {
    transform: translateY(-100vh) translateX(0) rotate(0deg);
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  90% {
    opacity: 1;
  }
  100% {
    transform: translateY(100vh) translateX(20px) rotate(360deg);
    opacity: 0;
  }
}

/* Add theme switcher styles */
.theme-switcher {
  position: fixed;
  top: 20px;
  right: 140px;
  background: rgba(147, 51, 234, 0.1);
  backdrop-filter: blur(10px);
  border-radius: 50%;
  width: 40px;
  height: 40px;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  transition: all 0.3s;
  z-index: 1000;
}

.theme-switcher:hover {
  background: rgba(147, 51, 234, 0.2);
  transform: scale(1.1);
}

.theme-switcher svg {
  width: 24px;
  height: 24px;
  fill: white;
}

/* Theme menu styles */
.theme-menu {
  position: fixed;
  top: 70px;
  right: 140px;
  background: rgba(20, 20, 20, 0.8);
  backdrop-filter: blur(10px);
  border-radius: 15px;
  padding: 15px;
  opacity: 0;
  transform: translateY(-10px);
  pointer-events: none;
  transition: all 0.3s;
  z-index: 999;
  border: 1px solid rgba(255, 255, 255, 0.1);
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
  min-width: 200px;
}
.theme-menu.active {
  opacity: 1;
  transform: translateY(0);
  pointer-events: auto;
}
.theme-option {
  display: flex;
  align-items: center;
  padding: 12px 15px;
  cursor: pointer;
  border-radius: 8px;
  transition: all 0.3s;
  margin-bottom: 5px;
}

.theme-option:hover {
  background: rgba(255, 255, 255, 0.1);
  transform: translateX(5px);
}

.theme-option.active {
  background: rgba(255, 255, 255, 0.15);
  box-shadow: 0 0 10px rgba(147, 51, 234, 0.3);
}

.theme-icon {
  width: 24px;
  height: 24px;
  margin-right: 12px;
  fill: white;
  opacity: 0.9;
}

.theme-name {
  color: white;
  font-size: 14px;
  font-weight: 500;
  opacity: 0.9;
}

/* Add divider between options */
.theme-option:not(:last-child) {
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  margin-bottom: 5px;
  padding-bottom: 10px;
}

/* Default Theme */
.theme-default .magical-background {
  background: radial-gradient(circle at center, 
    rgba(40, 0, 80, 1) 0%,
    rgba(20, 0, 40, 1) 100%);
}

.theme-default .magical-mist {
  opacity: 0.5;
  animation: defaultMistFlow 25s linear infinite;
}

@keyframes defaultMistFlow {
  0% {
    transform: translate(-25%, -25%) rotate(0deg);
  }
  100% {
    transform: translate(-25%, -25%) rotate(360deg);
  }
}

/* New Year Theme */
.theme-newyear .magical-background {
  background: radial-gradient(circle at center, 
    rgb(0, 0, 40) 0%,
    rgb(0, 0, 20) 100%);
}

.theme-newyear .firework {
  position: absolute;
  width: 4px;
  height: 4px;
  border-radius: 50%;
  animation: firework 2s ease-out forwards;
}

@keyframes firework {
  0% {
    transform: translateY(100vh) scale(1);
    opacity: 0;
  }
  50% {
    transform: translateY(30vh) scale(1);
    opacity: 1;
  }
  60% {
    transform: translateY(25vh);
    opacity: 1;
  }
  100% {
    transform: scale(30);
    opacity: 0;
  }
}

/* Summer Theme */
.theme-summer .magical-background {
  background: radial-gradient(circle at center, 
    rgb(255, 166, 0) 0%,
    rgb(255, 140, 0) 100%);
}

.theme-summer .magical-mist {
  background: linear-gradient(45deg,
    rgba(255, 255, 255, 0.1) 0%,
    rgba(255, 255, 0, 0.1) 50%,
    rgba(255, 255, 255, 0.1) 100%
  );
  animation: summerHeat 10s ease-in-out infinite;
}

.theme-summer .sun-ray {
  position: absolute;
  width: 2px;
  height: 50px;
  background: rgba(255, 255, 255, 0.3);
  animation: sunRay 4s linear infinite;
}

@keyframes summerHeat {
  0%, 100% { transform: translate(-10%, -10%) scale(1.1); }
  50% { transform: translate(-15%, -15%) scale(1.2); }
}

@keyframes sunRay {
  0% { transform: rotate(0deg) scale(1); opacity: 0.3; }
  50% { transform: rotate(180deg) scale(1.2); opacity: 0.6; }
  100% { transform: rotate(360deg) scale(1); opacity: 0.3; }
}

/* Winter Theme */
.theme-winter .magical-background {
  background: radial-gradient(circle at center, 
    rgb(230, 240, 255) 0%,
    rgb(200, 220, 255) 100%);
}

.theme-winter .snowflake {
  position: absolute;
  width: 8px;
  height: 8px;
  background: white;
  clip-path: polygon(50% 0%, 61% 35%, 98% 35%, 68% 57%, 79% 91%, 50% 70%, 21% 91%, 32% 57%, 2% 35%, 39% 35%);
  animation: winterSnow linear infinite;
}

@keyframes winterSnow {
  0% {
    transform: translateY(-100vh) rotate(0deg);
    opacity: 0;
  }
  20% {
    opacity: 1;
  }
  100% {
    transform: translateY(100vh) rotate(360deg);
    opacity: 0;
  }
}

/* Green Leafy Theme */
.theme-leafy .magical-background {
  background: radial-gradient(circle at center, 
    rgb(34, 139, 34) 0%,
    rgb(0, 100, 0) 100%);
}

.theme-leafy .leaf {
  position: absolute;
  width: 20px;
  height: 20px;
  background: rgba(144, 238, 144, 0.6);
  clip-path: path('M10 0 C15 10 20 10 10 20 C0 10 5 10 10 0');
  animation: leafFall 10s linear infinite;
}

/* Sakura Theme */
.theme-sakura .magical-background {
  background: radial-gradient(circle at center, 
    rgb(255, 223, 236) 0%,
    rgb(255, 182, 193) 100%);
}

.theme-sakura .petal {
  position: absolute;
  width: 15px;
  height: 15px;
  background: rgba(255, 192, 203, 0.8);
  border-radius: 15px 0px;
  animation: petalDance 10s linear infinite;
}

@keyframes petalDance {
  0% {
    transform: translateY(-100vh) rotate(0deg) translateX(0);
    opacity: 0;
  }
  10% {
    opacity: 0.8;
  }
  100% {
    transform: translateY(100vh) rotate(360deg) translateX(100px);
    opacity: 0;
  }
}

/* Theme transition */
.magical-background,
.magical-mist,
.floating-runes {
  transition: all 0.5s ease-out;
}

/* Enhanced Snow Theme */
.theme-snow .magical-background {
  background: radial-gradient(circle at center, 
    rgb(20, 30, 48) 0%,
    rgb(10, 15, 24) 100%);
}

.theme-snow .magical-mist {
  background: linear-gradient(45deg,
    rgba(255, 255, 255, 0.05) 0%,
    rgba(200, 220, 255, 0.05) 50%,
    rgba(255, 255, 255, 0.05) 100%
  );
  animation: snowMist 20s linear infinite;
}

.theme-snow .snowflake {
  position: fixed;
  width: 4px;
  height: 4px;
  background: white;
  border-radius: 50%;
  pointer-events: none;
  animation: snowfall linear infinite;
  box-shadow: 0 0 5px rgba(255, 255, 255, 0.5);
  z-index: 1;
}

@keyframes snowfall {
  0% { transform: translateY(-100vh) translateX(-100px); opacity: 0; }
  20% { opacity: 1; }
  100% { transform: translateY(100vh) translateX(100px); opacity: 0; }
}

@keyframes snowMist {
  0% { transform: translateY(0) scale(1); }
  50% { transform: translateY(-20px) scale(1.1); }
  100% { transform: translateY(0) scale(1); }
}

/* Enhanced Summer Theme */
.theme-summer .magical-background {
  background: radial-gradient(circle at center, 
    rgb(255, 166, 0) 0%,
    rgb(255, 100, 0) 100%);
}

.theme-summer .sun-ray {
  position: fixed;
  width: 3px;
  height: 100px;
  background: linear-gradient(to bottom, 
    rgba(255, 255, 255, 0.8),
    rgba(255, 255, 255, 0)
  );
  animation: sunRay 4s linear infinite;
  transform-origin: top;
  box-shadow: 0 0 20px rgba(255, 255, 255, 0.4);
}

/* Enhanced Sakura Theme */
.theme-sakura .magical-background {
  background: radial-gradient(circle at center, 
    rgb(255, 235, 245) 0%,
    rgb(255, 192, 203) 100%);
}

.theme-sakura .petal {
  position: fixed;
  width: 15px;
  height: 15px;
  background: rgba(255, 182, 193, 0.9);
  border-radius: 15px 0px;
  box-shadow: 0 0 10px rgba(255, 182, 193, 0.5);
  animation: petalDance 10s linear infinite;
  z-index: 1;
}

/* Enhanced Leafy Theme */
.theme-leafy .magical-background {
  background: radial-gradient(circle at center, 
    rgb(34, 139, 34) 0%,
    rgb(0, 80, 0) 100%);
}

.theme-leafy .leaf {
  position: fixed;
  width: 20px;
  height: 20px;
  background: rgba(144, 238, 144, 0.8);
  clip-path: path('M10 0 C15 10 20 10 10 20 C0 10 5 10 10 0');
  animation: leafFall 10s linear infinite;
  box-shadow: 0 0 10px rgba(144, 238, 144, 0.4);
  z-index: 1;
}

/* Enhanced New Year Theme */
.theme-newyear .magical-background {
  background: radial-gradient(circle at center, 
    rgb(0, 0, 40) 0%,
    rgb(0, 0, 20) 100%);
}

.theme-newyear .firework {
  position: fixed;
  width: 4px;
  height: 4px;
  border-radius: 50%;
  animation: firework 2s ease-out forwards;
  box-shadow: 0 0 20px currentColor;
  z-index: 1;
}

/* Enhanced Windy Theme */
.theme-windy .magical-background {
  background: radial-gradient(circle at center, 
    rgba(60, 20, 100, 1) 0%,
    rgba(30, 10, 50, 1) 100%);
}

.theme-windy .magical-mist {
  animation: windyMistFlow 20s linear infinite;
  opacity: 0.8;
  filter: blur(5px);
}

.theme-windy .wind-particle {
  position: fixed;
  width: 50px;
  height: 2px;
  background: linear-gradient(to right,
    rgba(255, 255, 255, 0),
    rgba(255, 255, 255, 0.5),
    rgba(255, 255, 255, 0)
  );
  animation: windParticle 3s linear infinite;
  z-index: 1;
}

@keyframes windParticle {
  0% {
    transform: translateX(-100vw) translateY(0) rotate(0deg);
    opacity: 0;
  }
  20% {
    opacity: 0.8;
  }
  100% {
    transform: translateX(100vw) translateY(20px) rotate(5deg);
    opacity: 0;
  }
}

/* ...existing code... */

/* Theme System Base */
.magical-background {
  /* ...existing code... */
  transition: background 0.5s ease-out;
}

/* Enhanced Theme Classes */

/* Default Theme */
.theme-default {
  --theme-primary: rgb(147, 51, 234);
  --theme-secondary: rgb(167, 71, 254);
  --theme-bg-start: rgba(40, 0, 80, 1);
  --theme-bg-end: rgba(20, 0, 40, 1);
}

.theme-default .magical-background {
  background: radial-gradient(circle at center, 
    var(--theme-bg-start) 0%,
    var(--theme-bg-end) 100%);
}

/* Snow Theme */
.theme-snow {
  --theme-primary: rgb(230, 240, 255);
  --theme-secondary: rgb(200, 220, 255);
  --theme-bg-start: rgb(20, 30, 48);
  --theme-bg-end: rgb(10, 15, 24);
}

.theme-snow .magical-background {
  background: radial-gradient(circle at center, 
    var(--theme-bg-start) 0%,
    var(--theme-bg-end) 100%);
}

.theme-snow .particle-system {
  filter: url(#snow-filter);
}

.theme-snow .snowflake {
  --size: calc(2px + random(4) * 1px);
  width: var(--size);
  height: var(--size);
  background: white;
  border-radius: 50%;
  filter: blur(1px);
  animation: snowfall calc(8s + random(5) * 1s) linear infinite;
  animation-delay: calc(random(5) * -1s);
}

/* Sakura Theme */
.theme-sakura {
  --theme-primary: rgb(255, 182, 193);
  --theme-secondary: rgb(255, 223, 236);
  --theme-bg-start: rgb(255, 235, 245);
  --theme-bg-end: rgb(255, 192, 203);
}

.theme-sakura .magical-background {
  background: radial-gradient(circle at center, 
    var(--theme-bg-start) 0%,
    var(--theme-bg-end) 100%);
}

.theme-sakura .petal {
  --rotation: calc(random(360) * 1deg);
  --scale: calc(0.8 + random(4) * 0.2);
  width: 15px;
  height: 15px;
  background: rgba(255, 182, 193, 0.9);
  border-radius: 15px 0px;
  transform: rotate(var(--rotation)) scale(var(--scale));
  animation: petalDance calc(10s + random(5) * 1s) linear infinite;
  animation-delay: calc(random(10) * -1s);
}

/* Windy Theme */
.theme-windy {
  --theme-primary: rgb(60, 20, 100);
  --theme-secondary: rgb(80, 40, 120);
  --theme-bg-start: rgba(60, 20, 100, 1);
  --theme-bg-end: rgba(30, 10, 50, 1);
}

.theme-windy .wind-particle {
  --speed: calc(2s + random(3) * 1s);
  --opacity: calc(0.3 + random(7) * 0.1);
  opacity: var(--opacity);
  animation: windParticle var(--speed) linear infinite;
  animation-delay: calc(random(3) * -1s);
}

/* Add SVG Filters */
.theme-filters {
  position: fixed;
  width: 0;
  height: 0;
  pointer-events: none;
}

/* Enhanced Animations */
@keyframes snowfall {
  from {
    transform: translateY(-10vh) translateX(0) rotate(0deg);
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  to {
    transform: translateY(110vh) translateX(calc(random(100) * 1px)) rotate(360deg);
    opacity: 0;
  }
}

@keyframes petalDance {
  from {
    transform: 
      translateY(-10vh) 
      translateX(calc(random(100) * 1px)) 
      rotate(var(--rotation));
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  to {
    transform: 
      translateY(110vh) 
      translateX(calc(random(200) * 1px)) 
      rotate(calc(var(--rotation) + 360deg));
    opacity: 0;
  }
}

@keyframes windParticle {
  from {
    transform: 
      translateX(-10vw) 
      translateY(calc(random(100) * 1vh)) 
      rotate(0deg);
    opacity: 0;
  }
  10% {
    opacity: var(--opacity);
  }
  to {
    transform: 
      translateX(110vw) 
      translateY(calc(random(20) * 1vh)) 
      rotate(15deg);
    opacity: 0;
  }
}

/* Theme transition helpers */
.theme-transition * {
  transition: 
    background-color 0.5s ease-out,
    color 0.5s ease-out,
    border-color 0.5s ease-out,
    box-shadow 0.5s ease-out;
}

/* Update component styles to use theme variables */
.chat-container,
.music-controls,
.interaction-toolbar {
  /* ...existing code... */
  background: color-mix(in srgb, var(--theme-primary) 10%, transparent);
  border-color: color-mix(in srgb, var(--theme-secondary) 20%, transparent);
  box-shadow: 
    0 0 20px color-mix(in srgb, var(--theme-primary) 20%, transparent),
    inset 0 0 10px color-mix(in srgb, var(--theme-primary) 10%, transparent);
}

/* iOS Permission Instructions */
.ios-permission-instructions {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.8);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 10000;
}

.instructions-content {
    background: rgba(147, 51, 234, 0.1);
    backdrop-filter: blur(10px);
    padding: 20px;
    border-radius: 15px;
    color: white;
    max-width: 300px;
    text-align: center;
    border: 1px solid rgba(167, 71, 254, 0.2);
    box-shadow: 
        0 0 20px rgba(147, 51, 234, 0.2),
        inset 0 0 10px rgba(147, 51, 234, 0.1);
}

.instructions-content h3 {
    margin-bottom: 15px;
}

.instructions-content ol {
    text-align: left;
    margin: 15px 0;
    padding-left: 20px;
}

.instructions-content li {
    margin-bottom: 8px;
}

.dismiss-btn {
    background: rgba(147, 51, 234, 0.3);
    border: none;
    padding: 10px 20px;
    border-radius: 8px;
    color: white;
    cursor: pointer;
    transition: all 0.3s;
}

.dismiss-btn:hover {
    background: rgba(147, 51, 234, 0.5);
}

/* ...existing code... */

.ios-instruction {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: rgba(147, 51, 234, 0.2);
    backdrop-filter: blur(10px);
    padding: 20px;
    border-radius: 15px;
    color: white;
    text-align: center;
    z-index: 10000;
    animation: fadeIn 0.3s ease-out;
}

/* Ensure buttons are more tappable on iOS */
button,
.toolbar-icon,
.nav-icon,
.control-button {
    min-width: 44px;
    min-height: 44px;
}

/* Fix iOS double-tap zoom */
* {
    touch-action: manipulation;
}

/* Fix iOS audio slider */
input[type="range"] {
    -webkit-appearance: none;
    background: transparent;
}